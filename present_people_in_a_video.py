# -*- coding: utf-8 -*-
"""Present people in a video.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CGb-lWH9OfGDcSa0vltbKVQ_wHy2A9nF

# This code use face recognition to detect and store a list of present people from a video


You need OpenCV and face_recognition installed to run this example. To install it, runðŸ‡°
 ___pip install opencv-python___  
___pip install face_recognition___
"""

!pip install face_recognition

# Commented out IPython magic to ensure Python compatibility.
# %pylab inline 
import face_recognition
import cv2
import matplotlib.patches as patches
from IPython.display import clear_output
from matplotlib.pyplot import imshow
import matplotlib.pylab as plt

cd ../pictures

"""We will Create a *person_image* variable and a *person_face_encoding* variable for each student picture in the folder pictures."""

import os

path = "../pictures"

folder = os.fsencode(path)

filenames = []
i = 1

for file in os.listdir(folder):
    filename = os.fsdecode(file)
    if filename.endswith( ('.jpeg', '.png', '.gif', 'png') ):
      globals()["person_image" + str(i)] = face_recognition.load_image_file(filename)
      globals()["person_face_encoding" + str(i)] = face_recognition.face_encodings(globals()["person_image" + str(i)])[0]
      i += 1

cd ..

"""___ 
**NEXT** , using the video stored as Movie.mp4, and the created arrays of known face encodings and their names.

 we will append the names of present people in a list. 
___


"""

video_capture = cv2.VideoCapture("./Movie.mp4")


# Create arrays of known face encodings and their names
known_face_encodings = [
    person_face_encoding1,
    person_face_encoding2
]
known_face_names = [
    "Person1",
    "Person2"
]

# Initialize some variables
face_locations = []
face_encodings = []
face_names = []
    
present = []
frame_count = 0

while video_capture.isOpened():    
    # Grab a single frame of video
    ret, frame = video_capture.read()

    # Bail out when the video file ends
    if not ret:
        video_capture.release()
        break

    frame_count += 1
    if frame_count % 15 == 0:    
        frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
       # Display video frame
        title("Input Stream")
        plt.imshow(frame)   
        # Find all the faces and face encodings in the current frame of video
        rgb_frame = frame[:, :, ::-1]
        face_locations = face_recognition.face_locations(rgb_frame)
        face_encodings = face_recognition.face_encodings(rgb_frame, face_locations)

        face_names = []
        for face_encoding in face_encodings:
            # See if the face is a match for the known face(s)
            matches = face_recognition.compare_faces(known_face_encodings, face_encoding)
            name = "Unknown"


            # # If a match was found in known_face_encodings, just use the first one.
            # if True in matches:
            #     first_match_index = matches.index(True)
            #     name = known_face_names[first_match_index]

            # Or instead, use the known face with the smallest distance to the new face
            face_distances = face_recognition.face_distance(known_face_encodings, face_encoding)
            best_match_index = np.argmin(face_distances)
            if matches[best_match_index]:
                name = known_face_names[best_match_index]
            
            
            present.append(name)

        # If faces were found, we will mark it on frame with blue dots
        for face_location in face_locations:        
            plt.plot(face_location[1], face_location[0], 'bo')
            plt.plot(face_location[1], face_location[2], 'bo')
            plt.plot(face_location[3], face_location[2], 'bo')
            plt.plot(face_location[3], face_location[0], 'bo')
      
        # Show frame...
        plt.show() 
        # ... and hold it until a new frame appears
        clear_output(wait=True)

"""___ 
**Now we can share the list of the present persons in the video.**
___
"""

present = list(set(present))
print(" The present persons are :  ")
present